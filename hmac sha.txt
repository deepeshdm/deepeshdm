import java.security.SignatureException;
import java.util.*;
import java.security.*;
import javax.crypto.*;
import java.security.InvalidKeyException;
import javax.crypto.spec.*;
import javax.crypto.spec.SecretKeySpec;
public class Msgobj{
    private static final String HMAC_SHA1_ALGORITHM="hMACsha1";
    private static String toHexString(byte[] bytes){
        Formatter formatter=new Formatter();
        for(byte b:bytes){
            formatter.format("%02x", b);
        }
        return formatter.toString();
    }
    public static  String calculateRFC2104HMAC(String data,String key)throws SignatureException,NoSuchAlgorithmException,InvalidKeyException{
        SecretKeySpec signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM);
        Mac mac=Mac.getInstance(HMAC_SHA1_ALGORITHM);
        mac.init(signingKey);
        return toHexString(mac.doFinal(data.getBytes()));
    }
    public static void main(String[] args)throws Exception{
        String hmac=calculateRFC2104HMAC("data","key") ; 
        System.out.println(hmac);
    }
}